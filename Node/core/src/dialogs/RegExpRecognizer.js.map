{"version":3,"file":"RegExpRecognizer.js","sourceRoot":"","sources":["RegExpRecognizer.ts"],"names":[],"mappings":";AAyCA;IAGI,YAAmB,MAAc,EAAE,WAA8B;QAA9C,WAAM,GAAN,MAAM,CAAQ;QAC7B,EAAE,CAAC,CAAC,WAAW,YAAY,MAAM,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,WAAW,GAAG,EAAE,GAAG,EAAU,WAAW,EAAE,CAAC;QACpD,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,WAAW,GAAe,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC;QACvD,CAAC;IACL,CAAC;IAEM,SAAS,CAAC,OAA0B,EAAE,EAAyD;QAClG,IAAI,MAAM,GAA4B,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QACnE,EAAE,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;YACrD,IAAI,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC;YACrC,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,GAAG,CAAC;YACnC,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YACrG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACN,IAAI,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAC7C,EAAE,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;oBAC5B,IAAI,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;oBACzB,MAAM,CAAC,KAAK,GAAG,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;oBAC5D,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;oBAC5B,MAAM,CAAC,UAAU,GAAG,GAAG,CAAC;oBACxB,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;gBAC7B,CAAC;gBACD,EAAE,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YACrB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,EAAE,CAAC,IAAI,KAAK,CAAC,mCAAmC,GAAG,MAAM,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;YAC7E,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,EAAE,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACrB,CAAC;IACL,CAAC;AACL,CAAC;AAlCY,wBAAgB,mBAkC5B,CAAA","sourcesContent":["// \n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license.\n// \n// Microsoft Bot Framework: http://botframework.com\n// \n// Bot Builder SDK Github:\n// https://github.com/Microsoft/BotBuilder\n// \n// Copyright (c) Microsoft Corporation\n// All rights reserved.\n// \n// MIT License:\n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n// \n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"\"AS IS\"\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport { IRecognizeContext } from './Dialog';\nimport { IIntentRecognizer, IIntentRecognizerResult } from './IntentRecognizerSet';\nimport * as utils from '../utils';\n\nexport interface IRegExpMap {\n    [local: string]: RegExp;\n}\n\nexport class RegExpRecognizer implements IIntentRecognizer {\n    private expressions: IRegExpMap;\n\n    constructor(public intent: string, expressions: RegExp|IRegExpMap) {\n        if (expressions instanceof RegExp) {\n            this.expressions = { '*': <RegExp>expressions };\n        } else {\n            this.expressions = <IRegExpMap>(expressions || {});\n        }\n    }\n\n    public recognize(context: IRecognizeContext, cb: (err: Error, result: IIntentRecognizerResult) => void): void {\n        var result: IIntentRecognizerResult = { score: 0.0, intent: null };\n        if (context && context.message && context.message.text) {\n            var utterance = context.message.text;\n            var locale = context.locale || '*';\n            var exp = this.expressions.hasOwnProperty(locale) ? this.expressions[locale] : this.expressions['*'];\n            if (exp) {\n                var matches = exp.exec(context.message.text);\n                if (matches && matches.length) {\n                    var matched = matches[0];\n                    result.score = matched.length / context.message.text.length;\n                    result.intent = this.intent;\n                    result.expression = exp;\n                    result.matched = matches;\n                }\n                cb(null, result);\n            } else {\n                cb(new Error(\"Expression not found for locale '\" + locale + \"'.\"), null);\n            }\n        } else {\n            cb(null, result);\n        }\n    }\n}\n"]}