{"version":3,"file":"Session.js","sourceRoot":"","sources":["Session.ts"],"names":[],"mappings":"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","sourcesContent":["// \n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license.\n// \n// Microsoft Bot Framework: http://botframework.com\n// \n// Bot Builder SDK Github:\n// https://github.com/Microsoft/BotBuilder\n// \n// Copyright (c) Microsoft Corporation\n// All rights reserved.\n// \n// MIT License:\n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n// \n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"\"AS IS\"\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport dl = require('./bots/Library');\nimport dlg = require('./dialogs/Dialog');\nimport actions = require('./dialogs/ActionSet');\nimport consts = require('./consts');\nimport sprintf = require('sprintf-js');\nimport events = require('events');\nimport utils = require('./utils');\nimport msg = require('./Message');\nimport logger = require('./logger');\nimport async = require('async');\nimport dfLoc = require('./DefaultLocalizer');\n\nexport interface ISessionOptions {\n    onSave: (done: (err: Error) => void) => void;\n    onSend: (messages: IMessage[], done: (err: Error) => void) => void;\n    library: dl.Library;\n    localizer: ILocalizer;\n    middleware: ISessionMiddleware[];\n    dialogId: string;\n    dialogArgs?: any;\n    autoBatchDelay?: number;\n    dialogErrorMessage?: string|string[]|IMessage|IIsMessage;\n    actions?: actions.ActionSet;\n}\n\nexport interface ISessionMiddleware {\n    (session: Session, next: Function): void;\n}\n\nexport class Session extends events.EventEmitter implements ISession {\n    private msgSent = false;\n    private _isReset = false;\n    private lastSendTime = new Date().getTime();\n    private batch: IMessage[] = [];\n    private batchTimer: NodeJS.Timer;\n    private batchStarted = false;\n    private sendingBatch = false;\n    private inMiddleware = false;\n    private _locale:string = null;\n\n    constructor(protected options: ISessionOptions) {\n        super();\n        this.library = options.library;\n        this.localizer = options.localizer;\n        \n        if (typeof this.options.autoBatchDelay !== 'number') {\n            this.options.autoBatchDelay = 250;  // 250ms delay\n        }\n    }\n\n    public dispatch(sessionState: ISessionState, message: IMessage): ISession {\n        var index = 0;\n        var session = this;\n        var now = new Date().getTime();\n        var middleware = this.options.middleware || [];\n        var next = () => {\n            var handler = index < middleware.length ? middleware[index] : null;\n            if (handler) {\n                index++;\n                handler(session, next);\n            } else {\n                this.inMiddleware = false;\n                this.sessionState.lastAccess = now; // Set after middleware runs so you can expire old sessions.\n                this.routeMessage();\n            }\n        };\n\n        // Make sure dialogData is properly initialized\n        this.sessionState = sessionState || { callstack: [], lastAccess: now, version: 0.0 };\n        var cur = this.curDialog();\n        if (cur) {\n            this.dialogData = cur.state;\n        }\n\n        // Dispatch message\n        this.inMiddleware = true;\n        this.message = <IMessage>(message || { text: '' });\n        if (!this.message.type) {\n            this.message.type = consts.messageType;\n        }\n\n        // Ensure localized prompts are loaded\n        var locale = this.preferredLocale();\n        this.localizer.load(locale, (err:Error) => {\n            if (err) {\n                    this.error(err);\n            } else {\n                next();\n        }});\n        return this;\n    }\n\n    public library: dl.Library;\n    public sessionState: ISessionState;\n    public message: IMessage;\n    public userData: any;\n    public conversationData: any;\n    public privateConversationData: any;\n    public dialogData: any;\n    public localizer:ILocalizer = null;\n\n    public error(err: Error): ISession {\n        logger.info(this, 'session.error()');\n\n        // End conversation with a message\n        if (this.options.dialogErrorMessage) {\n            this.endConversation(this.options.dialogErrorMessage);\n        } else {\n            var locale = this.preferredLocale();\n            this.endConversation(this.localizer.gettext(locale, 'default_error', consts.Library.system));\n        }\n\n        // Log error\n        var m = err.toString();\n        err = err instanceof Error ? err : new Error(m);\n        this.emit('error', err);\n        return this;\n    }\n\n    public preferredLocale(locale?: string, callback?: ErrorCallback): string {\n        if (locale) {\n            this._locale = locale;\n            if (this.userData) {\n                this.userData[consts.Data.PreferredLocale] = locale;\n            }\n            if (this.localizer) {\n                this.localizer.load(locale, callback);\n            }\n        } else if (!this._locale) {\n            if (this.userData && this.userData[consts.Data.PreferredLocale]) {\n                this._locale = this.userData[consts.Data.PreferredLocale];\n            } else if (this.message && this.message.textLocale) {\n                this._locale = this.message.textLocale;\n            } else if (this.localizer) {\n                this._locale = this.localizer.defaultLocale();\n            }\n        }        \n        return this._locale;\n    }\n\n    public gettext(messageid: string, ...args: any[]): string {\n        return this.vgettext(messageid, args);\n    }\n\n    public ngettext(messageid: string, messageid_plural: string, count: number): string {\n        var tmpl: string;\n        if (this.localizer && this.message) {\n            tmpl = this.localizer.ngettext(this.message.textLocale || '', messageid, messageid_plural, count);\n        } else if (count == 1) {\n            tmpl = messageid;\n        } else {\n            tmpl = messageid_plural;\n        }\n        return sprintf.sprintf(tmpl, count);\n    }\n    \n    public save(): this {\n        logger.info(this, 'session.save()');            \n        this.startBatch();\n        return this;\n    }\n\n    public send(message: string|string[]|IMessage|IIsMessage, ...args: any[]): this {\n        this.msgSent = true;\n        if (message) {\n            var m: IMessage;\n            if (typeof message == 'string' || Array.isArray(message)) {\n                m = this.createMessage(<any>message, args);\n            } else if ((<IIsMessage>message).toMessage) {\n                m = (<IIsMessage>message).toMessage();\n            } else {\n                m = <IMessage>message;\n            }\n            this.prepareMessage(m);\n            this.batch.push(m);\n            logger.info(this, 'session.send()');            \n        }\n        this.startBatch();\n        return this;\n    }\n\n    public sendTyping(): this {\n        this.msgSent = true;\n        var m = <IMessage>{ type: 'typing' };\n        this.prepareMessage(m);\n        this.batch.push(m);\n        logger.info(this, 'session.sendTyping()');            \n        this.sendBatch();\n        return this;        \n    }\n\n    public messageSent(): boolean {\n        return this.msgSent;\n    }\n\n    public beginDialog(id: string, args?: any): ISession {\n        // Find dialog\n        logger.info(this, 'session.beginDialog(%s)', id);            \n        var id = this.resolveDialogId(id);\n        var dialog = this.findDialog(id);\n        if (!dialog) {\n            throw new Error('Dialog[' + id + '] not found.');\n        }\n        \n        // Push dialog onto stack and start it\n        // - Removed the call to save() here as an optimization. In the case of prompts\n        //   we end up saving state twice, once here and again after they save off all of\n        //   there params before sending the message.  This chnage does mean a dialog needs\n        //   to either send a message or manually call session.save() when started but given\n        //   most dialogs should always prompt the user is some way that seems reasonable and\n        //   can save a number of intermediate calls to save.\n        this.pushDialog({ id: id, state: {} });\n        this.startBatch();\n        dialog.begin(this, args);\n        return this;\n    }\n\n    public replaceDialog(id: string, args?: any): ISession {\n        // Find dialog\n        logger.info(this, 'session.replaceDialog(%s)', id);            \n        var id = this.resolveDialogId(id);\n        var dialog = this.findDialog(id);\n        if (!dialog) {\n            throw new Error('Dialog[' + id + '] not found.');\n        }\n        \n        // Update the stack and start dialog\n        this.popDialog();\n        this.pushDialog({ id: id, state: {} });\n        this.startBatch();\n        dialog.begin(this, args);\n        return this;\n    }\n\n    public endConversation(message?: string|string[]|IMessage|IIsMessage, ...args: any[]): ISession {\n        // Unpack message\n        var m: IMessage;\n        if (message) {\n            if (typeof message == 'string' || Array.isArray(message)) {\n                m = this.createMessage(<any>message, args);\n            } else if ((<IIsMessage>message).toMessage) {\n                m = (<IIsMessage>message).toMessage();\n            } else {\n                m = <IMessage>message;\n            }\n            this.msgSent = true;\n            this.prepareMessage(m);\n            this.batch.push(m);\n        }\n\n        // Clear private conversation data\n        this.privateConversationData = {};\n                \n        // Clear stack and save.\n        logger.info(this, 'session.endConversation()');            \n        var ss = this.sessionState;\n        ss.callstack = [];\n        this.sendBatch();\n        return this;\n    }\n\n    public endDialog(message?: string|string[]|IMessage|IIsMessage, ...args: any[]): ISession {\n        // Check for result being passed\n        if (typeof message === 'object' && (message.hasOwnProperty('response') || message.hasOwnProperty('resumed') || message.hasOwnProperty('error'))) {\n            console.warn('Returning results via Session.endDialog() is deprecated. Use Session.endDialogWithResult() instead.')            \n            return this.endDialogWithResult(<any>message);\n        }\n\n        // Validate callstack\n        var cur = this.curDialog();\n        if (cur) {\n            // Unpack message\n            var m: IMessage;\n            if (message) {\n                if (typeof message == 'string' || Array.isArray(message)) {\n                    m = this.createMessage(<any>message, args);\n                } else if ((<IIsMessage>message).toMessage) {\n                    m = (<IIsMessage>message).toMessage();\n                } else {\n                    m = <IMessage>message;\n                }\n                this.msgSent = true;\n                this.prepareMessage(m);\n                this.batch.push(m);\n            }\n                    \n            // Pop dialog off the stack and then resume parent.\n            logger.info(this, 'session.endDialog()');            \n            var childId = cur.id;\n            cur = this.popDialog();\n            this.startBatch();\n            if (cur) {\n                var dialog = this.findDialog(cur.id);\n                if (dialog) {\n                    dialog.dialogResumed(this, { resumed: dlg.ResumeReason.completed, response: true, childId: childId });\n                } else {\n                    // Bad dialog on the stack so just end it.\n                    // - Because of the stack validation we should never actually get here.\n                    this.error(new Error(\"Can't resume missing parent dialog '\" + cur.id + \"'.\"));\n                }\n            }\n        }\n        return this;\n    }\n\n    public endDialogWithResult(result?: dlg.IDialogResult<any>): ISession {\n        // Validate callstack\n        var cur = this.curDialog();\n        if (cur) {\n            // Validate result\n            result = result || <any>{};\n            if (!result.hasOwnProperty('resumed')) {\n                result.resumed = dlg.ResumeReason.completed;\n            }\n            result.childId = cur.id;\n                    \n            // Pop dialog off the stack and resume parent dlg.\n            logger.info(this, 'session.endDialogWithResult()');            \n            cur = this.popDialog();\n            this.startBatch();\n            if (cur) {\n                var dialog = this.findDialog(cur.id);\n                if (dialog) {\n                    dialog.dialogResumed(this, result);\n                } else {\n                    // Bad dialog on the stack so just end it.\n                    // - Because of the stack validation we should never actually get here.\n                    this.error(new Error(\"Can't resume missing parent dialog '\" + cur.id + \"'.\"));\n                }\n            }\n        }\n        return this;\n    }\n\n    public cancelDialog(dialogId: string|number, replaceWithId?: string, replaceWithArgs?: any): ISession {\n        // Delete dialog(s)\n        var childId = typeof dialogId === 'number' ? this.sessionState.callstack[<number>dialogId].id : <string>dialogId;\n        var cur = this.deleteDialogs(dialogId);\n        if (replaceWithId) {\n            logger.info(this, 'session.cancelDialog(%s)', replaceWithId);            \n            var id = this.resolveDialogId(replaceWithId);\n            var dialog = this.findDialog(id);\n            this.pushDialog({ id: id, state: {} });\n            this.startBatch();\n            dialog.begin(this, replaceWithArgs);\n        } else {\n            logger.info(this, 'session.cancelDialog()');            \n            this.startBatch();\n            if (cur) {\n                var dialog = this.findDialog(cur.id);\n                if (dialog) {\n                    dialog.dialogResumed(this, { resumed: dlg.ResumeReason.canceled, response: null, childId: childId });\n                } else {\n                    // Bad dialog on the stack so just end it.\n                    // - Because of the stack validation we should never actually get here.\n                    this.error(new Error(\"Can't resume missing parent dialog '\" + cur.id + \"'.\"));\n                }\n            }\n        }\n        return this;\n    }\n\n    public reset(dialogId?: string, dialogArgs?: any): ISession {\n        logger.info(this, 'session.reset()');            \n        this._isReset = true;\n        this.sessionState.callstack = [];\n        if (!dialogId) {\n            dialogId = this.options.dialogId;\n            dialogArgs = this.options.dialogArgs;\n        }\n        this.beginDialog(dialogId, dialogArgs);\n        return this;\n    }\n\n    public isReset(): boolean {\n        return this._isReset;\n    }\n\n    public sendBatch(callback?: (err: Error) => void): void {\n        logger.info(this, 'session.sendBatch() sending %d messages', this.batch.length);            \n        if (this.sendingBatch) {\n            return;\n        }\n        if (this.batchTimer) {\n            clearTimeout(this.batchTimer);\n            this.batchTimer = null;\n        }\n        this.batchTimer = null;\n        var batch = this.batch;\n        this.batch = [];\n        this.batchStarted = false;\n        this.sendingBatch = true;\n        var cur = this.curDialog();\n        if (cur) {\n            cur.state = this.dialogData;\n        }\n        this.options.onSave((err) => {\n            if (!err) {\n                if (batch.length) {\n                    this.options.onSend(batch, (err) => {\n                        this.sendingBatch = false;\n                        if (this.batchStarted) {\n                            this.startBatch();\n                        }\n                        if (callback) {\n                            callback(err);\n                        }\n                    });\n                } else {\n                    this.sendingBatch = false;\n                    if (this.batchStarted) {\n                        this.startBatch();\n                    }\n                    if (callback) {\n                        callback(err);\n                    }\n                }\n            } else {\n                this.sendingBatch = false;\n                switch ((<any>err).code || '') {\n                    case consts.Errors.EBADMSG:\n                    case consts.Errors.EMSGSIZE:\n                        // Something wrong with state so reset everything \n                        this.userData = {};\n                        this.batch = [];\n                        this.endConversation(this.options.dialogErrorMessage || 'Oops. Something went wrong and we need to start over.');\n                        break;\n                } \n                if (callback) {\n                    callback(err);\n                }\n            }\n        });\n    }\n\n    //-----------------------------------------------------\n    // PRIVATE HELPERS\n    //-----------------------------------------------------\n\n    private startBatch(): void {\n        this.batchStarted = true;\n        if (!this.sendingBatch) {\n            if (this.batchTimer) {\n                clearTimeout(this.batchTimer);\n            }\n            this.batchTimer = setTimeout(() => {\n                this.sendBatch();\n            }, this.options.autoBatchDelay);\n        }\n    }\n\n    private createMessage(text: string|string[], args?: any[]): IMessage {\n        args.unshift(text);\n        var message = new msg.Message(this);\n        msg.Message.prototype.text.apply(message, args);\n        return message.toMessage();\n    }\n    \n    private prepareMessage(msg: IMessage): void {\n        if (!msg.type) {\n            msg.type = 'message';\n        }\n        if (!msg.address) {\n            msg.address = this.message.address;\n        }\n        if (!msg.textLocale && this.message.textLocale) {\n            msg.textLocale = this.message.textLocale;\n        }\n    }\n\n    private routeMessage(): void {\n        var _that = this;\n        function routeToDialog(recognizeResult: dlg.IRecognizeResult) {\n            var cur = _that.curDialog();\n            if (!cur) {\n                _that.beginDialog(_that.options.dialogId, _that.options.dialogArgs);\n            } else {\n                var dialog = _that.findDialog(cur.id);\n                _that.dialogData = cur.state;\n                dialog.replyReceived(_that, recognizeResult);\n            }    \n        }\n\n        // Validate callstack\n        if (this.validateCallstack()) {\n            // Check current dialogs confidence that it understands utterance \n            this.recognizeCurDialog((err, dialogResult) => {\n                if (err) {\n                    this.error(err);\n                } else if (dialogResult.score < 1.0) {\n                    // Check the confidence of any actions on the callstack.\n                    this.recognizeCallstackActions((err, actionResult) => {\n                        if (err) {\n                            this.error(err);\n                        } else if (actionResult.score > dialogResult.score) {\n                            // Route to action\n                            if (actionResult.dialogId) {\n                                // Action is on the stack\n                                var dialog = this.findDialog(actionResult.dialogId);\n                                dialog.invokeAction(this, actionResult);\n                            } else {\n                                // Global action\n                                this.options.actions.invokeAction(this, actionResult);\n                            }\n                        } else {\n                            routeToDialog(dialogResult);\n                        }\n                    });\n                } else {\n                    routeToDialog(dialogResult);\n                }\n            });      \n        } else {\n            logger.warn(this, 'Callstack is invalid, resetting session.');\n            this.reset(this.options.dialogId, this.options.dialogArgs);\n        }\n    }\n\n    private recognizeCurDialog(done: (err: Error, result: actions.IRecognizeActionResult) => void): void {\n        var cur = this.curDialog();\n        if (cur && this.message.text.indexOf('action?') !== 0) {\n            var dialog = this.findDialog(cur.id);\n            var locale = this.preferredLocale();\n            dialog.recognize({ message: this.message, locale: locale, dialogData: cur.state, activeDialog: true }, done);\n        } else {\n            done(null, { score: 0.0 });\n        }\n    }\n\n    private recognizeCallstackActions(done: (err: Error, result: actions.IRecognizeActionResult) => void): void {\n        var ss = this.sessionState;\n        var i = ss.callstack.length - 1;\n        var result: actions.IRecognizeActionResult = { score: 0.0 };\n        async.whilst(() => {\n            return (i >= 0 && result.score < 1.0);\n        }, (cb) => {\n            try {\n                var index = i--;\n                var cur = ss.callstack[index];\n                var dialog = this.findDialog(cur.id);\n                dialog.recognizeAction(this.message, (err, r) => {\n                    if (!err && r && r.score > result.score) {\n                        result = r;\n                        result.dialogId = cur.id;\n                        result.dialogIndex = index;\n                    }\n                    cb(err);\n                });\n            } catch (e) {\n                cb(e);\n            }\n        }, (err) => {\n            if (!err) {\n                if (result.score < 1.0 && this.options.actions) {\n                    this.options.actions.recognizeAction(this.message, (err, r) => {\n                        if (!err && r && r.score > result.score) {\n                            result = r;\n                        }\n                        done(err, result);\n                    });\n                } else {\n                    done(null, result);\n                }\n            } else {\n                done(err instanceof Error ? err : new Error(err.toString()), null);\n            }\n        });\n    }\n \n    private vgettext(messageid: string, args?: any[]): string {\n        var tmpl: string;\n        if (this.localizer && this.message) {\n            tmpl = this.localizer.gettext(this.preferredLocale() || this.message.textLocale || '', messageid);\n        } else {\n            tmpl = messageid;\n        }\n        return args && args.length > 0 ? sprintf.vsprintf(tmpl, args) : tmpl;\n    }\n\n    /** Checks for any unsupported dialogs on the callstack. */\n    private validateCallstack(): boolean {\n        var ss = this.sessionState;\n        for (var i = 0; i < ss.callstack.length; i++) {\n            var id = ss.callstack[i].id;\n            if (!this.findDialog(id)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    private resolveDialogId(id: string) {\n        if (id.indexOf(':') >= 0) {\n            return id;\n        }\n        var cur = this.curDialog();\n        var libName = cur && !this.inMiddleware ? cur.id.split(':')[0] : consts.Library.default;\n        return libName + ':' + id;\n    }\n\n    private findDialog(id: string): dlg.Dialog {\n        var parts = id.split(':');\n        return this.library.findDialog(parts[0] || consts.Library.default, parts[1]);\n    }\n\n    private pushDialog(ds: IDialogState): IDialogState {\n        var ss = this.sessionState;\n        var cur = this.curDialog();\n        if (cur) {\n            cur.state = this.dialogData || {};\n        }\n        ss.callstack.push(ds);\n        this.dialogData = ds.state || {};\n        return ds;\n    }\n\n    private popDialog(): IDialogState {\n        var ss = this.sessionState;\n        if (ss.callstack.length > 0) {\n            ss.callstack.pop();\n        }\n        var cur = this.curDialog();\n        this.dialogData = cur ? cur.state : null;\n        return cur;\n    }\n\n    private deleteDialogs(dialogId?: string|number): IDialogState {\n        var ss = this.sessionState;\n        var index = -1;\n        if (typeof dialogId === 'string') {\n            for (var i = ss.callstack.length - 1; i >= 0; i--) {\n                if (ss.callstack[i].id == dialogId) {\n                    index = i;\n                    break;\n                }\n            }\n        } else {\n            index = <number>dialogId;\n        }\n        if (index < 0 && index < ss.callstack.length) {\n            throw new Error('Unable to cancel dialog. Dialog[' + dialogId + '] not found.');\n        }\n        ss.callstack.splice(index);\n        var cur = this.curDialog();\n        this.dialogData = cur ? cur.state : null;\n        return cur;\n    }\n\n    private curDialog(): IDialogState {\n        var cur: IDialogState;\n        var ss = this.sessionState;\n        if (ss.callstack.length > 0) {\n            cur = ss.callstack[ss.callstack.length - 1];\n        }\n        return cur;\n    }\n\n    //-----------------------------------------------------\n    // DEPRECATED METHODS\n    //-----------------------------------------------------\n    \n    public getMessageReceived(): any {\n        console.warn(\"Session.getMessageReceived() is deprecated. Use Session.message.sourceEvent instead.\");\n        return this.message.sourceEvent;\n    }\n}\n"]}