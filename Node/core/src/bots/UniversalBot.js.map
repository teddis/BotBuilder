{"version":3,"file":"UniversalBot.js","sourceRoot":"","sources":["UniversalBot.ts"],"names":[],"mappings":"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","sourcesContent":["//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license.\n//\n// Microsoft Bot Framework: http://botframework.com\n//\n// Bot Builder SDK Github:\n// https://github.com/Microsoft/BotBuilder\n//\n// Copyright (c) Microsoft Corporation\n// All rights reserved.\n//\n// MIT License:\n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n//\n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"\"AS IS\"\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport dlg = require('../dialogs/Dialog');\nimport dl = require('./Library');\nimport da = require('../dialogs/DialogAction');\nimport actions = require('../dialogs/ActionSet');\nimport sd = require('../dialogs/SimpleDialog');\nimport ses = require('../Session');\nimport bs = require('../storage/BotStorage');\nimport consts = require('../consts');\nimport utils = require('../utils');\nimport logger = require('../logger');\nimport async = require('async');\nimport events = require('events');\nimport { DefaultLocalizer } from '../DefaultLocalizer';\n\nexport interface IUniversalBotSettings {\n    defaultDialogId?: string;\n    defaultDialogArgs?: any;\n    localizerSettings?: IDefaultLocalizerSettings;    \n    lookupUser?: ILookupUser;\n    processLimit?: number;\n    autoBatchDelay?: number;\n    storage?: bs.IBotStorage;\n    persistUserData?: boolean;\n    persistConversationData?: boolean;\n    dialogErrorMessage?: string|string[]|IMessage|IIsMessage;\n}\n\nexport interface IConnector {\n    onEvent(handler: (events: IEvent[], cb?: (err: Error) => void) => void): void;\n    send(messages: IMessage[], cb: (err: Error) => void): void;\n    startConversation(address: IAddress, cb: (err: Error, address?: IAddress) => void): void;\n}\ninterface IConnectorMap {\n    [channel: string]: IConnector;    \n}\n\nexport interface IMiddlewareMap {\n    receive?: IEventMiddleware|IEventMiddleware[];\n    send?: IEventMiddleware|IEventMiddleware[];\n    botbuilder?: ses.ISessionMiddleware|ses.ISessionMiddleware[];\n}\n\nexport interface IEventMiddleware {\n    (event: IEvent, next: Function): void;\n}\n\nexport interface ILookupUser {\n    (address: IAddress, done: (err: Error, user: IIdentity) => void): void;\n}\n\nexport class UniversalBot extends events.EventEmitter {\n    private settings = <IUniversalBotSettings>{ \n        processLimit: 4, \n        persistUserData: true, \n        persistConversationData: false \n    };\n    private connectors = <IConnectorMap>{}; \n    private lib = new dl.Library(consts.Library.default);\n    private actions = new actions.ActionSet();\n    private mwReceive = <IEventMiddleware[]>[];\n    private mwSend = <IEventMiddleware[]>[];\n    private mwSession = <ses.ISessionMiddleware[]>[]; \n    private localizer: DefaultLocalizer;\n    \n    \n    constructor(connector?: IConnector, settings?: IUniversalBotSettings) {\n        super();\n        this.lib.localePath('./locale/');\n        this.lib.library(dl.systemLib);\n        if (settings) {\n            for (var name in settings) {\n                if (settings.hasOwnProperty(name)) {\n                    this.set(name, (<any>settings)[name]);\n                }\n            }\n        }\n\n        if (connector) {\n            this.connector(consts.defaultConnector, connector);\n        }\n    }\n    \n    //-------------------------------------------------------------------------\n    // Settings\n    //-------------------------------------------------------------------------\n    \n    public set(name: string, value: any): this {\n        (<any>this.settings)[name] = value;\n        if (value && name === 'localizerSettings') {\n            var settings = <IDefaultLocalizerSettings>value;\n            if (settings.botLocalePath) {\n                this.lib.localePath(settings.botLocalePath);\n            }\n        }\n        return this;\n    }\n    \n    public get(name: string): any {\n        return (<any>this.settings)[name];\n    }\n    \n    //-------------------------------------------------------------------------\n    // Connectors\n    //-------------------------------------------------------------------------\n    \n    public connector(channelId: string, connector?: IConnector): IConnector {\n        var c: IConnector;\n        if (connector) {\n            // Bind to connector.\n            this.connectors[channelId || consts.defaultConnector] = c = connector;\n            c.onEvent((events, cb) => this.receive(events, cb));\n\n            // Optionally use connector for storage.\n            var asStorage: bs.IBotStorage = <any>connector;\n            if (!this.settings.storage && \n                typeof asStorage.getData === 'function' &&\n                typeof asStorage.saveData === 'function') {\n                this.settings.storage = asStorage;\n            }\n        } else if (this.connectors.hasOwnProperty(channelId)) {\n            c = this.connectors[channelId];\n        } else if (this.connectors.hasOwnProperty(consts.defaultConnector)) {\n            c = this.connectors[consts.defaultConnector];\n        }\n        return c;\n    }\n    \n    //-------------------------------------------------------------------------\n    // Library Management\n    //-------------------------------------------------------------------------\n\n    public dialog(id: string, dialog?: dlg.Dialog | da.IDialogWaterfallStep[] | da.IDialogWaterfallStep): dlg.Dialog {\n        return this.lib.dialog(id, dialog);\n    }\n\n    public library(lib: dl.Library|string): dl.Library {\n        return this.lib.library(lib);\n    }\n\n    //-------------------------------------------------------------------------\n    // Middleware\n    //-------------------------------------------------------------------------\n    \n    public use(...args: IMiddlewareMap[]): this {\n        args.forEach((mw) => {\n            var added = 0;\n            if (mw.receive) {\n                Array.prototype.push.apply(this.mwReceive, Array.isArray(mw.receive) ? mw.receive : [mw.receive]);\n                added++;\n            }\n            if (mw.send) {\n                Array.prototype.push.apply(this.mwSend, Array.isArray(mw.send) ? mw.send : [mw.send]);\n                added++;\n            }\n            if (mw.botbuilder) {\n                Array.prototype.push.apply(this.mwSession, Array.isArray(mw.botbuilder) ? mw.botbuilder : [mw.botbuilder]);\n                added++;\n            }\n            if (added < 1) {\n                console.warn('UniversalBot.use: no compatible middleware hook found to install.')\n            }\n        });\n        return this;    \n    }\n\n    //-------------------------------------------------------------------------\n    // Actions\n    //-------------------------------------------------------------------------\n\n    public beginDialogAction(name: string, id: string, options?: actions.IDialogActionOptions): this {\n        this.actions.beginDialogAction(name, id, options);\n        return this;\n    }\n\n    public endConversationAction(name: string, msg?: string|string[]|IMessage|IIsMessage, options?: actions.IDialogActionOptions): this {\n        this.actions.endConversationAction(name, msg, options);\n        return this;\n    }\n\n    \n    //-------------------------------------------------------------------------\n    // Messaging\n    //-------------------------------------------------------------------------\n    \n    public receive(events: IEvent|IEvent[], done?: (err: Error) => void): void {\n        var list: IEvent[] = Array.isArray(events) ? events : [events]; \n        async.eachLimit(list, this.settings.processLimit, (message: IMessage, cb: (err: Error) => void) => {\n            message.agent = consts.agent;\n            message.type = message.type || consts.messageType;\n            this.lookupUser(message.address, (user) => {\n                if (user) {\n                    message.user = user;\n                }\n                this.emit('receive', message);\n                this.eventMiddleware(message, this.mwReceive, () => {\n                    if (this.isMessage(message)) {\n                        this.emit('incoming', message);\n                        var userId = message.user.id;\n                        var conversationId = message.address.conversation ? message.address.conversation.id : null;\n                        var storageCtx: bs.IBotStorageContext = { \n                            userId: userId, \n                            conversationId: conversationId, \n                            address: message.address,\n                            persistUserData: this.settings.persistUserData,\n                            persistConversationData: this.settings.persistConversationData \n                        };\n                        this.route(storageCtx, message, this.settings.defaultDialogId || '/', this.settings.defaultDialogArgs, cb);\n                    } else {\n                        // Dispatch incoming activity\n                        this.emit(message.type, message);\n                        cb(null);\n                    }\n                }, cb);\n            }, cb);\n        }, this.errorLogger(done));\n    }\n \n    public beginDialog(address: IAddress, dialogId: string, dialogArgs?: any, done?: (err: Error) => void): void {\n        this.lookupUser(address, (user) => {\n            var msg = <IMessage>{\n                type: consts.messageType,\n                agent: consts.agent,\n                source: address.channelId,\n                sourceEvent: {},\n                address: utils.clone(address),\n                text: '',\n                user: user\n            };\n            this.ensureConversation(msg.address, (adr) => {\n                msg.address = adr;\n                var conversationId = msg.address.conversation ? msg.address.conversation.id : null;\n                var storageCtx: bs.IBotStorageContext = { \n                    userId: msg.user.id, \n                    conversationId: conversationId,\n                    address: msg.address,\n                    persistUserData: this.settings.persistUserData,\n                    persistConversationData: this.settings.persistConversationData \n                };\n                this.route(storageCtx, msg, dialogId, dialogArgs, this.errorLogger(done), true);\n            }, this.errorLogger(done));\n        }, this.errorLogger(done));\n    }\n    \n    public send(messages: IIsMessage|IMessage|IMessage[], done?: (err: Error) => void): void {\n        var list: IMessage[];\n        if (Array.isArray(messages)) {\n            list = messages;\n        } else if ((<IIsMessage>messages).toMessage) {\n            list = [(<IIsMessage>messages).toMessage()];\n        } else {\n            list = [<IMessage>messages];\n        }\n        async.eachLimit(list, this.settings.processLimit, (message, cb) => {\n            this.ensureConversation(message.address, (adr) => {\n                message.address = adr;\n                this.emit('send', message);\n                this.eventMiddleware(message, this.mwSend, () => {\n                    this.emit('outgoing', message);\n                    cb(null);\n                }, cb);\n            }, cb);\n        }, this.errorLogger((err) => {\n            if (!err) {\n                this.tryCatch(() => {\n                    // All messages should be targeted at the same channel.\n                    var channelId = list[0].address.channelId;\n                    var connector = this.connector(channelId);\n                    if (!connector) {\n                        throw new Error(\"Invalid channelId='\" + channelId + \"'\");\n                    }\n                    connector.send(list, this.errorLogger(done));\n                }, this.errorLogger(done));\n            } else if (done) {\n                done(null);\n            }\n        }));\n    }\n\n    public isInConversation(address: IAddress, cb: (err: Error, lastAccess: Date) => void): void {\n        this.lookupUser(address, (user) => {\n            var conversationId = address.conversation ? address.conversation.id : null;\n            var storageCtx: bs.IBotStorageContext = { \n                userId: user.id, \n                conversationId: conversationId, \n                address: address,\n                persistUserData: false,\n                persistConversationData: false \n            };\n            this.getStorageData(storageCtx, (data) => {\n                var lastAccess: Date;\n                if (data && data.privateConversationData && data.privateConversationData.hasOwnProperty(consts.Data.SessionState)) {\n                    var ss: ISessionState = data.privateConversationData[consts.Data.SessionState];\n                    if (ss && ss.lastAccess) {\n                        lastAccess = new Date(ss.lastAccess);\n                    }\n                }\n                cb(null, lastAccess);\n            }, this.errorLogger(<any>cb));\n        }, this.errorLogger(<any>cb));\n    }\n\n    //-------------------------------------------------------------------------\n    // Helpers\n    //-------------------------------------------------------------------------\n    \n    private route(storageCtx: bs.IBotStorageContext, message: IMessage, dialogId: string, dialogArgs: any, done: (err: Error) => void, newStack = false): void {\n        // --------------------------------------------------------------------\n        // Theory of Operation\n        // --------------------------------------------------------------------\n        // The route() function is called for both reactive & pro-active \n        // messages and while they generally work the same there are some \n        // differences worth noting.\n        //\n        // REACTIVE:\n        // * The passed in storageKey will have the normalized userId and the\n        //   conversationId for the incoming message. These are used as keys to\n        //   load the persisted userData and conversationData objects.\n        // * After loading data from storage we create a new Session object and\n        //   dispatch the incoming message to the active dialog.\n        // * As part of the normal dialog flow the session will call onSave() 1 \n        //   or more times before each call to onSend().  Anytime onSave() is \n        //   called we'll save the current userData & conversationData objects\n        //   to storage.\n        //\n        // PROACTIVE:\n        // * Proactive follows essentially the same flow but the difference is \n        //   the passed in storageKey will only have a userId and not a \n        //   conversationId as this is a new conversation.  This will cause use\n        //   to load userData but conversationData will be set to {}.\n        // * When onSave() is called for a proactive message we don't know the\n        //   conversationId yet so we can't actually save anything. The first\n        //   call to this.send() results in a conversationId being assigned and\n        //   that's the point at which we can actually save state. So we'll update\n        //   the storageKey with the new conversationId and then manually trigger\n        //   saving the userData & conversationData to storage.\n        // * After the first call to onSend() for the conversation everything \n        //   follows the same flow as for reactive messages.\n        var loadedData: bs.IBotStorageData;\n        this.getStorageData(storageCtx, (data) => {\n            // Create localizer on first access\n            if (!this.localizer) {\n                var defaultLocale = this.settings.localizerSettings ? this.settings.localizerSettings.defaultLocale : null;\n                this.localizer = new DefaultLocalizer(this.lib, defaultLocale);\n            }\n            // Initialize session\n            var session = new ses.Session({\n                localizer: this.localizer,\n                autoBatchDelay: this.settings.autoBatchDelay,\n                library: this.lib,\n                actions: this.actions,\n                middleware: this.mwSession,\n                dialogId: dialogId,\n                dialogArgs: dialogArgs,\n                dialogErrorMessage: this.settings.dialogErrorMessage,\n                onSave: (cb) => {\n                    var finish = this.errorLogger(cb);\n                    loadedData.userData = utils.clone(session.userData);\n                    loadedData.conversationData = utils.clone(session.conversationData);\n                    loadedData.privateConversationData = utils.clone(session.privateConversationData);\n                    loadedData.privateConversationData[consts.Data.SessionState] = session.sessionState;\n                    this.saveStorageData(storageCtx, loadedData, finish, finish);\n                },\n                onSend: (messages, cb) => {\n                    this.send(messages, cb);\n                }\n            });\n            session.on('error', (err: Error) => this.emitError(err));\n            \n            // Initialize session data\n            var sessionState: ISessionState;\n            session.userData = data.userData || {};\n            session.conversationData = data.conversationData || {};\n            session.privateConversationData = data.privateConversationData || {};\n            if (session.privateConversationData.hasOwnProperty(consts.Data.SessionState)) {\n                sessionState = newStack ? null : session.privateConversationData[consts.Data.SessionState];\n                delete session.privateConversationData[consts.Data.SessionState];\n            }\n            loadedData = data;  // We'll clone it when saving data later\n            \n            // Dispatch message\n            this.emit('routing', session);\n            session.dispatch(sessionState, message);\n            done(null);\n        }, done);\n    }\n\n    private eventMiddleware(event: IEvent, middleware: IEventMiddleware[], done: Function, error?: (err: Error) => void): void {\n        var i = -1;\n        var _this = this;\n        function next() {\n            if (++i < middleware.length) {\n                _this.tryCatch(() => {\n                    middleware[i](event, next);\n                }, () => next());\n            } else {\n                _this.tryCatch(() => done(), error);\n            }\n        }\n        next();\n    }\n\n    private isMessage(message: IMessage): boolean {\n        return (message && message.type && message.type.toLowerCase() == consts.messageType);\n    }\n    \n    private ensureConversation(address: IAddress, done: (adr: IAddress) => void, error?: (err: Error) => void): void {\n        this.tryCatch(() => {\n            if (!address.conversation) {\n                var connector = this.connector(address.channelId);\n                if (!connector) {\n                    throw new Error(\"Invalid channelId='\" + address.channelId + \"'\");\n                }\n                connector.startConversation(address, (err, adr) => {\n                    if (!err) {\n                        this.tryCatch(() => done(adr), error);\n                    } else if (error) {\n                        error(err);\n                    }\n                });\n            } else {\n                this.tryCatch(() => done(address), error);\n            }\n        }, error);\n    }\n    \n    private lookupUser(address: IAddress, done: (user: IIdentity) => void, error?: (err: Error) => void): void {\n        this.tryCatch(() => {\n            this.emit('lookupUser', address);\n            if (this.settings.lookupUser) {\n                this.settings.lookupUser(address, (err, user) => {\n                    if (!err) {\n                        this.tryCatch(() => done(user || address.user), error);\n                    } else if (error) {\n                        error(err);\n                    }\n                });\n            } else {\n                this.tryCatch(() => done(address.user), error);\n            }\n        }, error);\n    }\n    \n    private getStorageData(storageCtx: bs.IBotStorageContext, done: (data: bs.IBotStorageData) => void, error?: (err: Error) => void): void {\n        this.tryCatch(() => {\n            this.emit('getStorageData', storageCtx);\n            var storage = this.getStorage();\n            storage.getData(storageCtx, (err, data) => {\n                if (!err) {\n                    this.tryCatch(() => done(data || {}), error);\n                } else if (error) {\n                    error(err);\n                } \n            });  \n        }, error);\n    }\n    \n    private saveStorageData(storageCtx: bs.IBotStorageContext, data: bs.IBotStorageData, done?: Function, error?: (err: Error) => void): void {\n        this.tryCatch(() => {\n            this.emit('saveStorageData', storageCtx);\n            var storage = this.getStorage();\n            storage.saveData(storageCtx, data, (err) => {\n                if (!err) {\n                    if (done) {\n                        this.tryCatch(() => done(), error);\n                    }\n                } else if (error) {\n                    error(err);\n                } \n            });  \n        }, error);\n    }\n\n    private getStorage(): bs.IBotStorage {\n        if (!this.settings.storage) {\n            this.settings.storage = new bs.MemoryBotStorage();\n        }\n        return this.settings.storage;\n    }\n    \n    private tryCatch(fn: Function, error?: (err?: Error) => void): void {\n        try {\n            fn();\n        } catch (e) {\n            try {\n                if (error) {\n                    error(e);\n                }\n            } catch (e2) {\n                this.emitError(e2);\n            }\n        }\n    }\n\n    private errorLogger(done?: (err: Error) => void): (err: Error) => void {\n        return (err: Error) => {\n            if (err) {\n                this.emitError(err);\n            }\n            if (done) {\n                done(err);\n                done = null;\n            }\n        };\n    }\n     \n    private emitError(err: Error): void {\n        var m = err.toString();\n        var e = err instanceof Error ? err : new Error(m);\n        if (this.listenerCount('error') > 0) {\n            this.emit('error', e);\n        } else {\n            console.error(e.stack);\n        }\n    }\n}"]}