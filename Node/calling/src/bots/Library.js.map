{"version":3,"file":"Library.js","sourceRoot":"","sources":["Library.ts"],"names":[],"mappings":"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","sourcesContent":["// \n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license.\n// \n// Microsoft Bot Framework: http://botframework.com\n// \n// Bot Builder SDK Github:\n// https://github.com/Microsoft/BotBuilder\n// \n// Copyright (c) Microsoft Corporation\n// All rights reserved.\n// \n// MIT License:\n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n// \n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"\"AS IS\"\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport dlg = require('../dialogs/Dialog');\nimport da = require('../dialogs/DialogAction');\nimport sd = require('../dialogs/SimpleDialog');\nimport consts = require('../consts');\n\nexport interface IDialogMap {\n    [id: string]: dlg.IDialog;\n}\n\nexport interface ILibraryMap {\n    [name: string]: Library;\n}\n\nexport class Library {\n    private dialogs = <IDialogMap>{};\n    private libraries = <ILibraryMap>{};\n\n    constructor(public name: string) {\n    }\n\n    public dialog(id: string, dialog?: dlg.IDialog | da.IDialogWaterfallStep[] | da.IDialogWaterfallStep): dlg.Dialog {\n        var d: dlg.Dialog;\n        if (dialog) {\n            // Fixup id\n            if (id.indexOf(':') >= 0) {\n                id = id.split(':')[1];\n            }\n\n            // Ensure unique\n            if (this.dialogs.hasOwnProperty(id)) {\n                throw new Error(\"Dialog[\" + id + \"] already exists in library[\" + this.name + \"].\")\n            }\n\n            // Wrap dialog and save\n            if (Array.isArray(dialog)) {\n                d = new sd.SimpleDialog(da.waterfall(dialog));\n            } else if (typeof dialog == 'function') {\n                d = new sd.SimpleDialog(da.waterfall([<any>dialog]));\n            } else {\n                d = <any>dialog;\n            }\n            this.dialogs[id] = d;\n        } else if (this.dialogs.hasOwnProperty(id)) {\n            d = this.dialogs[id];\n        }\n        return d;\n    }\n\n    public library(lib: Library|string): Library {\n        var l: Library;\n        if (typeof lib === 'string') {\n            if (lib == this.name) {\n                l = this;\n            } else if (this.libraries.hasOwnProperty(lib)) {\n                l = this.libraries[lib];\n            } else {\n                // Search for lib\n                for (var name in this.libraries) {\n                    l = this.libraries[name].library(lib);\n                    if (l) {\n                        break;\n                    }\n                }\n            }\n        } else {\n            // Save library\n            l = this.libraries[lib.name] = <Library>lib;\n        }\n        return l;\n    }\n\n    public findDialog(libName: string, dialogId: string): dlg.Dialog {\n        var d: dlg.Dialog;\n        var lib = this.library(libName);\n        if (lib) {\n            d = lib.dialog(dialogId);\n        }\n        return d;\n    }\n}\n\nexport var systemLib = new Library(consts.Library.system);\n"]}