{"version":3,"file":"UniversalCallBot.js","sourceRoot":"","sources":["UniversalCallBot.ts"],"names":[],"mappings":"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","sourcesContent":["//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license.\n//\n// Microsoft Bot Framework: http://botframework.com\n//\n// Bot Builder SDK Github:\n// https://github.com/Microsoft/BotBuilder\n//\n// Copyright (c) Microsoft Corporation\n// All rights reserved.\n//\n// MIT License:\n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n//\n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"\"AS IS\"\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport dlg = require('../dialogs/Dialog');\nimport da = require('../dialogs/DialogAction');\nimport dl = require('./Library');\nimport sd = require('../dialogs/SimpleDialog');\nimport ses = require('../CallSession');\nimport bs = require('../storage/BotStorage');\nimport consts = require('../consts');\nimport utils = require('../utils');\nimport events = require('events');\nimport async = require('async');\n\nexport interface IUniversalCallBotSettings {\n    defaultDialogId?: string;\n    defaultDialogArgs?: any;\n    localizer?: ILocalizer;\n    lookupUser?: ILookupUser;\n    processLimit?: number;\n    autoBatchDelay?: number;\n    storage?: bs.IBotStorage;\n    persistUserData?: boolean;\n    persistConversationData?: boolean;\n    dialogErrorMessage?: string|string[]|IAction|IIsAction;\n    promptDefaults?: IPrompt;\n    recognizeDefaults?: IRecognizeAction;\n    recordDefaults?: IRecordAction;\n}\n\nexport interface ICallConnector {\n    onEvent(handler: (event: IEvent, cb?: (err: Error) => void) => void): void;\n    send(event: IEvent, cb: (err: Error) => void): void;\n}\n\nexport interface ICallMiddlewareMap {\n    receive?: IEventMiddleware|IEventMiddleware[];\n    send?: IEventMiddleware|IEventMiddleware[];\n    botbuilder?: ses.ICallSessionMiddleware|ses.ICallSessionMiddleware[];\n}\n\nexport interface IEventMiddleware {\n    (event: IEvent, next: Function): void;\n}\n\nexport interface ILookupUser {\n    (address: IAddress, done: (err: Error, user: IIdentity) => void): void;\n}\n\nexport class UniversalCallBot extends events.EventEmitter {\n    private settings = <IUniversalCallBotSettings>{ \n        processLimit: 4, \n        persistUserData: true, \n        persistConversationData: false \n    };\n    private lib = new dl.Library(consts.Library.default);\n    private mwReceive = <IEventMiddleware[]>[];\n    private mwSend = <IEventMiddleware[]>[];\n    private mwSession = <ses.ICallSessionMiddleware[]>[]; \n    \n    constructor(private connector: ICallConnector, settings?: IUniversalCallBotSettings) {\n        super();\n        if (settings) {\n            for (var name in settings) {\n                this.set(name, (<any>settings)[name]);\n            }\n        }\n        var asStorage: bs.IBotStorage = <any>connector;\n        if (!this.settings.storage && \n            typeof asStorage.getData === 'function' &&\n            typeof asStorage.saveData === 'function') {\n            this.settings.storage = asStorage;\n        }\n        this.lib.library(dl.systemLib);\n        this.connector.onEvent((event, cb) => this.receive(event, cb));\n    }\n    \n    //-------------------------------------------------------------------------\n    // Settings\n    //-------------------------------------------------------------------------\n    \n    public set(name: string, value: any): this {\n        (<any>this.settings)[name] = value;\n        return this;\n    }\n    \n    public get(name: string): any {\n        return (<any>this.settings)[name];\n    }\n    \n    //-------------------------------------------------------------------------\n    // Library Management\n    //-------------------------------------------------------------------------\n\n    public dialog(id: string, dialog?: dlg.IDialog | da.IDialogWaterfallStep[] | da.IDialogWaterfallStep): dlg.Dialog {\n        return this.lib.dialog(id, dialog);\n    }\n\n    public library(lib: dl.Library|string): dl.Library {\n        return this.lib.library(lib);\n    }\n\n    //-------------------------------------------------------------------------\n    // Middleware\n    //-------------------------------------------------------------------------\n    \n    public use(...args: ICallMiddlewareMap[]): this {\n        args.forEach((mw) => {\n            var added = 0;\n            if (mw.receive) {\n                Array.prototype.push.apply(this.mwReceive, Array.isArray(mw.receive) ? mw.receive : [mw.receive]);\n                added++;\n            }\n            if (mw.send) {\n                Array.prototype.push.apply(this.mwSend, Array.isArray(mw.send) ? mw.send : [mw.send]);\n                added++;\n            }\n            if (mw.botbuilder) {\n                Array.prototype.push.apply(this.mwSession, Array.isArray(mw.botbuilder) ? mw.botbuilder : [mw.botbuilder]);\n                added++;\n            }\n            if (added < 1) {\n                console.warn('UniversalBot.use: no compatible middleware hook found to install.')\n            }\n        });\n        return this;    \n    }\n    \n    //-------------------------------------------------------------------------\n    // Messaging\n    //-------------------------------------------------------------------------\n    \n    private receive(event: IEvent, done?: (err: Error) => void): void {\n        var logger = this.errorLogger(done);\n        this.lookupUser(event.address, (user) => {\n            if (user) {\n                event.user = user;\n            }\n            this.emit('receive', event);\n            this.eventMiddleware(event, this.mwReceive, () => {\n                this.emit('incoming', event);\n                var userId = event.user.id;\n                var storageCtx: bs.IBotStorageContext = { \n                    userId: userId, \n                    conversationId: event.address.conversation.id, \n                    address: event.address,\n                    persistUserData: this.settings.persistUserData,\n                    persistConversationData: this.settings.persistConversationData \n                };\n                this.route(storageCtx, event, this.settings.defaultDialogId || '/', this.settings.defaultDialogArgs, logger);\n            }, logger);\n        }, logger);\n    }\n    \n    private send(event: IIsEvent|IEvent, done?: (err: Error) => void): void {\n        var logger = this.errorLogger(done);\n        var evt = (<IIsEvent>event).toEvent ? (<IIsEvent>event).toEvent() : <IEvent>event; \n        this.emit('send', evt);\n        this.eventMiddleware(evt, this.mwSend, () => {\n            this.emit('outgoing', evt);\n            this.connector.send(evt, logger);\n        }, logger);\n    }\n\n    //-------------------------------------------------------------------------\n    // Helpers\n    //-------------------------------------------------------------------------\n    \n    private route(storageCtx: bs.IBotStorageContext, event: IEvent, dialogId: string, dialogArgs: any, done: (err: Error) => void): void {\n        // --------------------------------------------------------------------\n        // Theory of Operation\n        // --------------------------------------------------------------------\n        // The route() function is called for both reactive & pro-active \n        // messages and while they generally work the same there are some \n        // differences worth noting.\n        //\n        // REACTIVE:\n        // * The passed in storageKey will have the normalized userId and the\n        //   conversationId for the incoming message. These are used as keys to\n        //   load the persisted userData and conversationData objects.\n        // * After loading data from storage we create a new Session object and\n        //   dispatch the incoming message to the active dialog.\n        // * As part of the normal dialog flow the session will call onSave() 1 \n        //   or more times before each call to onSend().  Anytime onSave() is \n        //   called we'll save the current userData & conversationData objects\n        //   to storage.\n        //\n        // PROACTIVE:\n        // * Proactive follows essentially the same flow but the difference is \n        //   the passed in storageKey will only have a userId and not a \n        //   conversationId as this is a new conversation.  This will cause use\n        //   to load userData but conversationData will be set to {}.\n        // * When onSave() is called for a proactive message we don't know the\n        //   conversationId yet so we can't actually save anything. The first\n        //   call to this.send() results in a conversationId being assigned and\n        //   that's the point at which we can actually save state. So we'll update\n        //   the storageKey with the new conversationId and then manually trigger\n        //   saving the userData & conversationData to storage.\n        // * After the first call to onSend() for the conversation everything \n        //   follows the same flow as for reactive messages.\n        var loadedData: bs.IBotStorageData;\n        this.getStorageData(storageCtx, (data) => {\n            // Initialize session\n            var session = new ses.CallSession({\n                localizer: this.settings.localizer,\n                autoBatchDelay: this.settings.autoBatchDelay,\n                library: this.lib,\n                middleware: this.mwSession,\n                dialogId: dialogId,\n                dialogArgs: dialogArgs,\n                dialogErrorMessage: this.settings.dialogErrorMessage,\n                promptDefaults: this.settings.promptDefaults || <any>{},\n                recognizeDefaults: this.settings.recognizeDefaults || <any>{},\n                recordDefaults: this.settings.recordDefaults || <any>{},\n                onSave: (cb) => {\n                    var finish = this.errorLogger(cb);\n                    loadedData.userData = utils.clone(session.userData);\n                    loadedData.conversationData = utils.clone(session.conversationData);\n                    loadedData.privateConversationData = utils.clone(session.privateConversationData);\n                    loadedData.privateConversationData[consts.Data.SessionState] = session.sessionState;\n                    this.saveStorageData(storageCtx, loadedData, finish, finish);\n                },\n                onSend: (workflow, cb) => {\n                    this.send(workflow, cb);\n                }\n            });\n            session.on('error', (err: Error) => this.emitError(err));\n            \n            // Initialize session data\n            var sessionState: ISessionState;\n            session.userData = data.userData || {};\n            session.conversationData = data.conversationData || {};\n            session.privateConversationData = data.privateConversationData || {};\n            if (session.privateConversationData.hasOwnProperty(consts.Data.SessionState)) {\n                sessionState = session.privateConversationData[consts.Data.SessionState];\n                delete session.privateConversationData[consts.Data.SessionState];\n            }\n            loadedData = data;  // We'll clone it when saving data later\n            \n            // Dispatch message\n            this.emit('routing', session);\n            session.dispatch(sessionState, event);\n            done(null);\n        }, done);\n    }\n\n    private eventMiddleware(event: IEvent, middleware: IEventMiddleware[], done: Function, error?: (err: Error) => void): void {\n        var i = -1;\n        var _that = this;\n        function next() {\n            if (++i < middleware.length) {\n                _that.tryCatch(() => {\n                    middleware[i](event, next);\n                }, () => next());\n            } else {\n                _that.tryCatch(() => done(), error);\n            }\n        }\n        next();\n    }\n    \n    private lookupUser(address: IAddress, done: (user: IIdentity) => void, error?: (err: Error) => void): void {\n        this.tryCatch(() => {\n            this.emit('lookupUser', address);\n            if (this.settings.lookupUser) {\n                this.settings.lookupUser(address, (err, user) => {\n                    if (!err) {\n                        this.tryCatch(() => done(user || address.user), error);\n                    } else if (error) {\n                        error(err);\n                    }\n                });\n            } else {\n                this.tryCatch(() => done(address.user), error);\n            }\n        }, error);\n    }\n    \n    private getStorageData(storageCtx: bs.IBotStorageContext, done: (data: bs.IBotStorageData) => void, error?: (err: Error) => void): void {\n        this.tryCatch(() => {\n            this.emit('getStorageData', storageCtx);\n            var storage = this.getStorage();\n            storage.getData(storageCtx, (err, data) => {\n                if (!err) {\n                    this.tryCatch(() => done(data || {}), error);\n                } else if (error) {\n                    error(err);\n                } \n            });  \n        }, error);\n    }\n    \n    private saveStorageData(storageCtx: bs.IBotStorageContext, data: bs.IBotStorageData, done?: Function, error?: (err: Error) => void): void {\n        this.tryCatch(() => {\n            this.emit('saveStorageData', storageCtx);\n            var storage = this.getStorage();\n            storage.saveData(storageCtx, data, (err) => {\n                if (!err) {\n                    if (done) {\n                        this.tryCatch(() => done(), error);\n                    }\n                } else if (error) {\n                    error(err);\n                } \n            });  \n        }, error);\n    }\n\n    private getStorage(): bs.IBotStorage {\n        if (!this.settings.storage) {\n            this.settings.storage = new bs.MemoryBotStorage();\n        }\n        return this.settings.storage;\n    }\n    \n    private tryCatch(fn: Function, error?: (err?: Error) => void): void {\n        try {\n            fn();\n        } catch (e) {\n            try {\n                if (error) {\n                    error(e);\n                }\n            } catch (e2) {\n                this.emitError(e2);\n            }\n        }\n    }\n\n    private errorLogger(done?: (err: Error) => void): (err: Error) => void {\n        return (err: Error) => {\n            if (err) {\n                this.emitError;\n            }\n            if (done) {\n                done(err);\n                done = null;\n            }\n        };\n    }\n     \n    private emitError(err: Error): void {\n        var msg = err.toString();\n        this.emit(\"error\", err instanceof Error ? err : new Error(msg));\n    }\n}"]}