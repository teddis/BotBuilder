{"version":3,"file":"CallSession.js","sourceRoot":"","sources":["CallSession.ts"],"names":[],"mappings":"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","sourcesContent":["// \n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license.\n// \n// Microsoft Bot Framework: http://botframework.com\n// \n// Bot Builder SDK Github:\n// https://github.com/Microsoft/BotBuilder\n// \n// Copyright (c) Microsoft Corporation\n// All rights reserved.\n// \n// MIT License:\n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n// \n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"\"AS IS\"\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport dl = require('./bots/Library');\nimport dlg = require('./dialogs/Dialog');\nimport consts = require('./consts');\nimport sprintf = require('sprintf-js');\nimport events = require('events');\nimport utils = require('./utils');\nimport answer = require('./workflow/AnswerAction');\nimport hangup = require('./workflow/HangupAction');\nimport reject = require('./workflow/RejectAction');\nimport playPrompt = require('./workflow/PlayPromptAction');\nimport prompt = require('./workflow/Prompt');\n\nexport interface ICallSessionOptions {\n    onSave: (done: (err: Error) => void) => void;\n    onSend: (workflow: IWorkflow, done: (err: Error) => void) => void;\n    library: dl.Library;\n    middleware: ICallSessionMiddleware[];\n    dialogId: string;\n    dialogArgs?: any;\n    localizer?: ILocalizer;\n    autoBatchDelay?: number;\n    dialogErrorMessage?: string|string[]|IAction|IIsAction;\n    promptDefaults: IPrompt;\n    recognizeDefaults: IRecognizeAction;\n    recordDefaults: IRecordAction;\n}\n\nexport interface ICallSessionMiddleware {\n    (session: CallSession, next: Function): void;\n}\n\nexport var CallState = {\n    idle: 'idle',\n    incoming: 'incoming',\n    establishing: 'establishing',\n    established: 'established',\n    hold: 'hold',\n    unhold: 'unhold',\n    transferring: 'transferring',\n    redirecting: 'redirecting',\n    terminating: 'terminating',\n    terminated: 'terminated'\n};\n\nexport var ModalityType = {\n    audio: 'audio',\n    video: 'video',\n    videoBasedScreenSharing: 'videoBasedScreenSharing'\n};\n\nexport var NotificationType = {\n    rosterUpdate: 'rosterUpdate',\n    callStateChange: 'callStateChange'\n};\n\nexport var OperationOutcome = {\n    success: 'success',\n    failure: 'failure'\n}\n\nexport class CallSession extends events.EventEmitter implements ISession {\n    private msgSent = false;\n    private _isReset = false;\n    private lastSendTime = new Date().getTime();\n    private actions: IAction[] = [];\n    private batchTimer: NodeJS.Timer;\n    private batchStarted = false;\n    private sendingBatch = false;\n    private address: ICallConnectorAddress;\n\n    constructor(protected options: ICallSessionOptions) {\n        super();\n        this.library = options.library;\n        this.promptDefaults = options.promptDefaults;\n        this.recognizeDefaults = options.recognizeDefaults;\n        this.recordDefaults = options.recordDefaults;\n        if (typeof this.options.autoBatchDelay !== 'number') {\n            this.options.autoBatchDelay = 250;  // 250ms delay\n        }\n    }\n\n    public dispatch(sessionState: ISessionState, message: IEvent): ISession {\n        var index = 0;\n        var middleware = this.options.middleware || [];\n        var session = this;\n        var next = () => {\n            var handler = index < middleware.length ? middleware[index] : null;\n            if (handler) {\n                index++;\n                handler(session, next);\n            } else {\n                this.routeMessage();\n            }\n        };\n\n        // Make sure dialogData is properly initialized\n        this.sessionState = sessionState || { callstack: [], lastAccess: 0, version: 0.0 };\n        this.sessionState.lastAccess = new Date().getTime();\n        var cur = this.curDialog();\n        if (cur) {\n            this.dialogData = cur.state;\n        }\n\n        // Dispatch message\n        this.message = <IEvent>(message || {});\n        this.address = utils.clone(this.message.address);\n        next();\n        return this;\n    }\n\n    public library: dl.Library;\n    public promptDefaults: IPrompt;\n    public recognizeDefaults: IRecognizeAction;\n    public recordDefaults: IRecordAction;\n    public sessionState: ISessionState;\n    public message: IEvent;\n    public userData: any;\n    public conversationData: any;\n    public privateConversationData: any;\n    public dialogData: any;\n\n    public error(err: Error): this {\n        var msg = err.toString();\n        err = err instanceof Error ? err : new Error(msg);\n        this.endConversation(this.options.dialogErrorMessage || 'Oops. Something went wrong and we need to start over.');\n        this.emit('error', err);\n        return this;\n    }\n\n    public gettext(messageid: string, ...args: any[]): string {\n        return this.vgettext(messageid, args);\n    }\n\n    public ngettext(messageid: string, messageid_plural: string, count: number): string {\n        var tmpl: string;\n        if (this.options.localizer && this.message) {\n            tmpl = this.options.localizer.ngettext(this.message.user.locale || '', messageid, messageid_plural, count);\n        } else if (count == 1) {\n            tmpl = messageid;\n        } else {\n            tmpl = messageid_plural;\n        }\n        return sprintf.sprintf(tmpl, count);\n    }\n    \n    public save(): this {\n        this.startBatch();\n        return this;\n    }\n\n    public answer(): this {\n        this.msgSent = true;\n        this.actions.push(new answer.AnswerAction(this).toAction());\n        this.startBatch();\n        return this;\n    }\n\n    public reject(): this {\n        this.msgSent = true;\n        this.actions.push(new reject.RejectAction(this).toAction());\n        this.startBatch();\n        return this;\n    }\n\n    public hangup(): this {\n        this.msgSent = true;\n        this.actions.push(new hangup.HangupAction(this).toAction());\n        this.startBatch();\n        return this;\n    }\n\n    public send(action: string|string[]|IAction|IIsAction, ...args: any[]): this {\n        this.msgSent = true;\n        if (action) {\n            var a: IAction;\n            if (typeof action == 'string' || Array.isArray(action)) {\n                a = this.createPlayPromptAction(<any>action, args);\n            } else if ((<IIsAction>action).toAction) {\n                a = (<IIsAction>action).toAction();\n            } else {\n                a = <IAction>action;\n            }\n            this.actions.push(a);\n        }\n        this.startBatch();\n        return this;\n    }\n\n    public messageSent(): boolean {\n        return this.msgSent;\n    }\n\n    public beginDialog<T>(id: string, args?: T): ISession {\n        // Find dialog\n        id = this.resolveDialogId(id);\n        var dialog = this.findDialog(id);\n        if (!dialog) {\n            throw new Error('Dialog[' + id + '] not found.');\n        }\n        \n        // Push dialog onto stack and start it\n        // - Removed the call to save() here as an optimization. In the case of prompts\n        //   we end up saving state twice, once here and again after they save off all of\n        //   there params before sending the message.  This chnage does mean a dialog needs\n        //   to either send a message or manually call session.save() when started but given\n        //   most dialogs should always prompt the user is some way that seems reasonable and\n        //   can save a number of intermediate calls to save.\n        this.pushDialog({ id: id, state: {} });\n        this.startBatch();\n        dialog.begin(this, args);\n        return this;\n    }\n\n    public replaceDialog<T>(id: string, args?: T): ISession {\n        // Find dialog\n        var id = this.resolveDialogId(id);\n        var dialog = this.findDialog(id);\n        if (!dialog) {\n            throw new Error('Dialog[' + id + '] not found.');\n        }\n        \n        // Update the stack and start dialog\n        this.popDialog();\n        this.pushDialog({ id: id, state: {} });\n        this.startBatch();\n        dialog.begin(this, args);\n        return this;\n    }\n\n    public endConversation(action?: string|string[]|IAction|IIsAction, ...args: any[]): ISession {\n        // Unpack action\n        if (action) {\n            var a: IAction;\n            if (typeof action == 'string' || Array.isArray(action)) {\n                a = this.createPlayPromptAction(<any>action, args);\n            } else if ((<IIsAction>action).toAction) {\n                a = (<IIsAction>action).toAction();\n            } else {\n                a = <IAction>action;\n            }\n            this.msgSent = true;\n            this.actions.push(a);\n        }\n\n        // Clear private conversation data\n        this.privateConversationData = {};\n\n        // Upsert reject/hangup commands.\n        this.addCallControl(true);\n                \n        // Clear stack and save.\n        var ss = this.sessionState;\n        ss.callstack = [];\n        this.sendBatch();\n        return this;\n    }\n\n    public endDialog(action?: string|string[]|IAction|IIsAction, ...args: any[]): ISession {\n        // Validate callstack\n        // - Protect against too many calls to endDialog()\n        var cur = this.curDialog();\n        if (!cur) {\n            console.error('ERROR: Too many calls to session.endDialog().')\n            return this;\n        }\n        \n        // Unpack action\n        if (action) {\n            var a: IAction;\n            if (typeof action == 'string' || Array.isArray(action)) {\n                a = this.createPlayPromptAction(<any>action, args);\n            } else if ((<IIsAction>action).toAction) {\n                a = (<IIsAction>action).toAction();\n            } else {\n                a = <IAction>action;\n            }\n            this.msgSent = true;\n            this.actions.push(a);\n        }\n                \n        // Pop dialog off the stack and then resume parent.\n        var childId = cur.id;\n        cur = this.popDialog();\n        this.startBatch();\n        if (cur) {\n            var dialog = this.findDialog(cur.id);\n            if (dialog) {\n                dialog.dialogResumed(this, { resumed: dlg.ResumeReason.completed, response: true, childId: childId });\n            } else {\n                // Bad dialog on the stack so just end it.\n                // - Because of the stack validation we should never actually get here.\n                this.error(new Error(\"ERROR: Can't resume missing parent dialog '\" + cur.id + \"'.\"));\n            }\n        } else {\n            this.endConversation();\n        }\n        return this;\n    }\n\n    public endDialogWithResult(result?: dlg.IDialogResult<any>): ISession {\n        // Validate callstack\n        // - Protect against too many calls to endDialogWithResult()\n        var cur = this.curDialog();\n        if (!cur) {\n            console.error('ERROR: Too many calls to session.endDialog().')\n            return this;\n        }\n        \n        // Validate result\n        result = result || <any>{};\n        if (!result.hasOwnProperty('resumed')) {\n            result.resumed = dlg.ResumeReason.completed;\n        }\n        result.childId = cur.id;\n                \n        // Pop dialog off the stack and resume parent dialog.\n        cur = this.popDialog();\n        this.startBatch();\n        if (cur) {\n            var dialog = this.findDialog(cur.id);\n            if (dialog) {\n                dialog.dialogResumed(this, result);\n            } else {\n                // Bad dialog on the stack so just end it.\n                // - Because of the stack validation we should never actually get here.\n                this.error(new Error(\"ERROR: Can't resume missing parent dialog '\" + cur.id + \"'.\"));\n            }\n        } else {\n            this.endConversation();\n        }\n        return this;\n    }\n\n    public reset(dialogId?: string, dialogArgs?: any): ISession {\n        this._isReset = true;\n        this.sessionState.callstack = [];\n        if (!dialogId) {\n            dialogId = this.options.dialogId;\n            dialogArgs = this.options.dialogArgs;\n        }\n        this.beginDialog(dialogId, dialogArgs);\n        return this;\n    }\n\n    public isReset(): boolean {\n        return this._isReset;\n    }\n\n    public sendBatch(): void {\n        if (this.sendingBatch) {\n            return;\n        }\n        if (this.batchTimer) {\n            clearTimeout(this.batchTimer);\n            this.batchTimer = null;\n        }\n        this.batchStarted = false;\n        this.sendingBatch = true;\n        this.addCallControl(false);\n        var workflow: IWorkflow = {\n            type: 'workflow',\n            agent: consts.agent,\n            source: this.address.channelId,\n            address: this.address,\n            actions: this.actions,\n            notificationSubscriptions: [\"callStateChange\"]\n        };\n        this.actions = [];\n        var cur = this.curDialog();\n        if (cur) {\n            cur.state = this.dialogData;\n        }\n        this.options.onSave((err) => {\n            if (!err && workflow.actions.length) {\n                // Send workflow\n                this.options.onSend(workflow, (err) => {\n                    this.sendingBatch = false;\n                    if (this.batchStarted) {\n                        this.startBatch();\n                    }\n                });\n            } else {\n                this.sendingBatch = false;\n                if (this.batchStarted) {\n                    this.startBatch();\n                }\n            }\n        });\n    }\n\n    //-----------------------------------------------------\n    // PRIVATE HELPERS\n    //-----------------------------------------------------\n    \n    private addCallControl(alsoEndCall: boolean): void {\n        var hasAnswer = (this.message.type !== 'conversation');\n        var hasEndCall = false;\n        var hasOtherActions = false;\n        this.actions.forEach((a) => {\n            switch (a.action) {\n                case 'answer':\n                    hasAnswer = true;\n                    break;\n                case 'hangup':\n                case 'reject':\n                    hasEndCall = true;\n                    break;\n                default:\n                    hasOtherActions = true;\n                    break;\n            }\n        });\n        if (!hasAnswer && hasOtherActions) {\n            this.actions.unshift(new answer.AnswerAction(this).toAction());\n            hasAnswer = true;\n        }\n        if (alsoEndCall && !hasEndCall) {\n            if (hasAnswer) {\n                this.actions.push(new hangup.HangupAction(this).toAction());     \n            } else {\n                this.actions.push(new reject.RejectAction(this).toAction());     \n            }\n        }\n    }\n\n    private startBatch(): void {\n        this.batchStarted = true;\n        if (!this.sendingBatch) {\n            if (this.batchTimer) {\n                clearTimeout(this.batchTimer);\n            }\n            this.batchTimer = setTimeout(() => {\n                this.batchTimer = null;\n                this.sendBatch();\n            }, this.options.autoBatchDelay);\n        }\n    }\n\n    private createPlayPromptAction(text: string|string[], args?: any[]): IAction {\n        // Create prompt\n        args.unshift(text);\n        var p = new prompt.Prompt(this);\n        prompt.Prompt.prototype.value.apply(p, args);\n\n        // Return playPrompt action\n        return new playPrompt.PlayPromptAction(this).prompts([p]).toAction();\n    }\n\n    private routeMessage(): void {\n        try {\n            // Route message to dialog.\n            var cur = this.curDialog();\n            if (!cur) {\n                this.beginDialog(this.options.dialogId, this.options.dialogArgs);\n            } else if (this.validateCallstack()) {\n                var dialog = this.findDialog(cur.id);\n                this.dialogData = cur.state;\n                dialog.replyReceived(this);\n            } else {\n                console.warn('Callstack is invalid, resetting session.');\n                this.reset(this.options.dialogId, this.options.dialogArgs);\n            }\n        } catch (e) {\n            this.error(e);\n        }\n    }\n\n    private vgettext(messageid: string, args?: any[]): string {\n        var tmpl: string;\n        if (this.options.localizer && this.message) {\n            tmpl = this.options.localizer.gettext(this.message.user.locale || '', messageid);\n        } else {\n            tmpl = messageid;\n        }\n        return args && args.length > 0 ? sprintf.vsprintf(tmpl, args) : tmpl;\n    }\n\n    /** Checks for any unsupported dialogs on the callstack. */\n    private validateCallstack(): boolean {\n        var ss = this.sessionState;\n        for (var i = 0; i < ss.callstack.length; i++) {\n            var id = ss.callstack[i].id;\n            if (!this.findDialog(id)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    private resolveDialogId(id: string) {\n        if (id.indexOf(':') >= 0) {\n            return id;\n        }\n        var cur = this.curDialog();\n        var libName = cur ? cur.id.split(':')[0] : consts.Library.default;\n        return libName + ':' + id;\n    }\n\n    private findDialog(id: string): dlg.Dialog {\n        var parts = id.split(':');\n        return this.library.findDialog(parts[0] || consts.Library.default, parts[1]);\n    }\n\n    private pushDialog(dialog: IDialogState): IDialogState {\n        var ss = this.sessionState;\n        var cur = this.curDialog();\n        if (cur) {\n            cur.state = this.dialogData || {};\n        }\n        ss.callstack.push(dialog);\n        this.dialogData = dialog.state || {};\n        return dialog;\n    }\n\n    private popDialog(): IDialogState {\n        var ss = this.sessionState;\n        if (ss.callstack.length > 0) {\n            ss.callstack.pop();\n        }\n        var cur = this.curDialog();\n        this.dialogData = cur ? cur.state : null;\n        return cur;\n    }\n\n    private curDialog(): IDialogState {\n        var cur: IDialogState;\n        var ss = this.sessionState;\n        if (ss.callstack.length > 0) {\n            cur = ss.callstack[ss.callstack.length - 1];\n        }\n        return cur;\n    }\n}\n"]}